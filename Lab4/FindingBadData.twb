<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' inline='true' name='excel-direct.41865.463928703706' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ayrton/Desktop/Classes/CS 4540 Data Viz/LE04 raw/studentloans2013.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.41865.463928703706leaf' name='&apos;12-13 Fed Student Loans Campus$&apos;' table='[&apos;12-13 Fed Student Loans Campus$&apos;]' type='table'>
          <columns gridOrigin='A1:N4047:no:A1:N4047:0' header='yes' outcome='2'>
            <column datatype='integer' name='OPE ID' ordinal='0' />
            <column datatype='string' name='School' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='Zip Code' ordinal='3' />
            <column datatype='string' name='School Type' ordinal='4' />
            <column datatype='integer' name='Federal Work Study Recipients' ordinal='5' />
            <column datatype='integer' name='Federal Work Study $ Federal Award' ordinal='6' />
            <column datatype='integer' name='Federal Work Study Disbursements' ordinal='7' />
            <column datatype='integer' name='Perkins Loan Recipients' ordinal='8' />
            <column datatype='integer' name='Perkins Loan $ Federal Award' ordinal='9' />
            <column datatype='integer' name='Perkins Loan Disbursements' ordinal='10' />
            <column datatype='integer' name='Federal Supplemental Recipients' ordinal='11' />
            <column datatype='integer' name='Federal Supplemental $ Federal Award' ordinal='12' />
            <column datatype='integer' name='Federal Supplemental Disbursements' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.41865.463928703706leaf' name='&apos;12-13 Fed Student Loans Campus$&apos;' table='[&apos;12-13 Fed Student Loans Campus$&apos;]' type='table'>
          <columns gridOrigin='A1:N4047:no:A1:N4047:0' header='yes' outcome='2'>
            <column datatype='integer' name='OPE ID' ordinal='0' />
            <column datatype='string' name='School' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='Zip Code' ordinal='3' />
            <column datatype='string' name='School Type' ordinal='4' />
            <column datatype='integer' name='Federal Work Study Recipients' ordinal='5' />
            <column datatype='integer' name='Federal Work Study $ Federal Award' ordinal='6' />
            <column datatype='integer' name='Federal Work Study Disbursements' ordinal='7' />
            <column datatype='integer' name='Perkins Loan Recipients' ordinal='8' />
            <column datatype='integer' name='Perkins Loan $ Federal Award' ordinal='9' />
            <column datatype='integer' name='Perkins Loan Disbursements' ordinal='10' />
            <column datatype='integer' name='Federal Supplemental Recipients' ordinal='11' />
            <column datatype='integer' name='Federal Supplemental $ Federal Award' ordinal='12' />
            <column datatype='integer' name='Federal Supplemental Disbursements' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N4047:no:A1:N4047:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPE ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OPE ID]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>OPE ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School</remote-name>
            <remote-type>130</remote-type>
            <local-name>[School]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>School</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zip Code]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Zip Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[School Type]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>School Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Work Study Recipients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Work Study Recipients]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Work Study Recipients</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Work Study $ Federal Award</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Work Study $ Federal Award]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Work Study $ Federal Award</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Work Study Disbursements</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Work Study Disbursements]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Work Study Disbursements</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perkins Loan Recipients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Perkins Loan Recipients]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Perkins Loan Recipients</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perkins Loan $ Federal Award</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Perkins Loan $ Federal Award]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Perkins Loan $ Federal Award</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perkins Loan Disbursements</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Perkins Loan Disbursements]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Perkins Loan Disbursements</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Supplemental Recipients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Supplemental Recipients]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Supplemental Recipients</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Supplemental $ Federal Award</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Supplemental $ Federal Award]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Supplemental $ Federal Award</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Supplemental Disbursements</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Supplemental Disbursements]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Supplemental Disbursements</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Amount Per Aid Recipient' datatype='real' name='[Calculation_5520814112546427]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_7350814111147874]/([Federal Supplemental Recipients]+[Federal Work Study Recipients]+[Perkins Loan Recipients])' scope-isolation='false' />
      </column>
      <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Federal Supplemental $ Federal Award]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Federal Work Study $ Federal Award]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ope Id' datatype='integer' name='[OPE ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Perkins Loan $ Federal Award]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
      <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Federal Supplemental $ Federal Award]' derivation='Sum' name='[sum:Federal Supplemental $ Federal Award:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Federal Supplemental Disbursements]' derivation='Sum' name='[sum:Federal Supplemental Disbursements:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Federal Work Study $ Federal Award]' derivation='Sum' name='[sum:Federal Work Study $ Federal Award:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Federal Work Study Disbursements]' derivation='Sum' name='[sum:Federal Work Study Disbursements:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perkins Loan $ Federal Award]' derivation='Sum' name='[sum:Perkins Loan $ Federal Award:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perkins Loan Disbursements]' derivation='Sum' name='[sum:Perkins Loan Disbursements:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (School Type,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:School Type:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-10' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Federal Supplemental Disbursements:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Federal Supplemental $ Federal Award:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Perkins Loan $ Federal Award:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Perkins Loan Disbursements:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Federal Work Study Disbursements:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Federal Work Study $ Federal Award:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.41865.463928703706leaf' name='&apos;12-13 Fed Student Loans Campus$&apos;' table='[&apos;12-13 Fed Student Loans Campus$&apos;]' type='table'>
                <columns gridOrigin='A1:N4047:no:A1:N4047:0' header='yes' outcome='2'>
                  <column datatype='integer' name='OPE ID' ordinal='0' />
                  <column datatype='string' name='School' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='Zip Code' ordinal='3' />
                  <column datatype='string' name='School Type' ordinal='4' />
                  <column datatype='integer' name='Federal Work Study Recipients' ordinal='5' />
                  <column datatype='integer' name='Federal Work Study $ Federal Award' ordinal='6' />
                  <column datatype='integer' name='Federal Work Study Disbursements' ordinal='7' />
                  <column datatype='integer' name='Perkins Loan Recipients' ordinal='8' />
                  <column datatype='integer' name='Perkins Loan $ Federal Award' ordinal='9' />
                  <column datatype='integer' name='Perkins Loan Disbursements' ordinal='10' />
                  <column datatype='integer' name='Federal Supplemental Recipients' ordinal='11' />
                  <column datatype='integer' name='Federal Supplemental $ Federal Award' ordinal='12' />
                  <column datatype='integer' name='Federal Supplemental Disbursements' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Loan Amount by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Average Amount Per Aid Recipient' datatype='real' name='[Calculation_5520814112546427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_7350814111147874]/([Federal Supplemental Recipients]+[Federal Work Study Recipients]+[Perkins Loan Recipients])' scope-isolation='false' />
            </column>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Supplemental Recipients]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Recipients]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Recipients]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5520814112546427]' derivation='Sum' name='[sum:Calculation_5520814112546427:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[none:School Type:nk]</rows>
        <cols>[excel-direct.41865.463928703706].[sum:Calculation_5520814112546427:qk]</cols>
      </table>
      <simple-id uuid='{B4E02B73-5557-44F3-ABD0-115D57EE0244}' />
    </worksheet>
    <worksheet name='Number of Schools by Type (Bar)'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.41865.463928703706].[sum:Number of Records:qk]' scope='cols' value='Number of Schools' />
            <format attr='subtitle' class='0' field='[excel-direct.41865.463928703706].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.41865.463928703706].[sum:Number of Records:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[none:School Type:nk]</rows>
        <cols>[excel-direct.41865.463928703706].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{AE1207EB-3569-4A77-8308-0D98126E901E}' />
    </worksheet>
    <worksheet name='Number of Schools by Type (Pie)'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='506' />
            <format attr='width' value='939' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
              <wedge-size column='[excel-direct.41865.463928703706].[sum:Number of Records:qk]' />
              <text column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
              <text column='[excel-direct.41865.463928703706].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[excel-direct.41865.463928703706].[none:School Type:nk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[excel-direct.41865.463928703706].[pcto:sum:Number of Records:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8E814E35-D723-42CD-96AB-347FBF31A58E}' />
    </worksheet>
    <worksheet name='Total Aid (Disbursement) by Loan Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Federal Supplemental Disbursements]' derivation='Sum' name='[sum:Federal Supplemental Disbursements:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Federal Work Study Disbursements]' derivation='Sum' name='[sum:Federal Work Study Disbursements:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perkins Loan Disbursements]' derivation='Sum' name='[sum:Perkins Loan Disbursements:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.41865.463928703706].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.41865.463928703706].[sum:Federal Supplemental Disbursements:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.41865.463928703706].[sum:Federal Work Study Disbursements:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.41865.463928703706].[sum:Perkins Loan Disbursements:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.41865.463928703706].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.41865.463928703706].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[Multiple Values]</rows>
        <cols>([excel-direct.41865.463928703706].[none:School Type:nk] / [excel-direct.41865.463928703706].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{7DEDFC77-F863-41EB-BB6A-4C67B7F8341B}' />
    </worksheet>
    <worksheet name='Total Aid (Disbursement) by School'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School]' role='dimension' type='nominal' />
            <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' include-totals='true' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <color column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <text column='[excel-direct.41865.463928703706].[none:School:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1E24CBDA-DF2D-430A-AAAF-DA354F8468B8}' />
    </worksheet>
    <worksheet name='Total Aid (Disbursement) by School/Type (Bubble)'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[School]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <text column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
              <text column='[excel-direct.41865.463928703706].[none:School:nk]' />
              <color column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{03EE56E0-F6E3-4D56-83DD-1F0210E88593}' />
    </worksheet>
    <worksheet name='Total Aid (Disbursement) by School/Type (Treemap)'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[School]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <color column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
              <text column='[excel-direct.41865.463928703706].[none:School:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E212694-3478-4FFB-B994-F1F939C83C3B}' />
    </worksheet>
    <worksheet name='Total Aid by School Type By State'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.41865.463928703706].[Inclusions (School Type,State)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Private/Non-Profit&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Proprietary&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Public&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.41865.463928703706].[Inclusions (School Type,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <size column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <lod column='[excel-direct.41865.463928703706].[none:State:nk]' />
              <color column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[Latitude (generated)]</rows>
        <cols>[excel-direct.41865.463928703706].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{334A74BD-4B2B-48E5-BCED-57056345E8D6}' />
    </worksheet>
    <worksheet name='Total Aid by School Type by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.41865.463928703706].[Inclusions (School Type,State)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Private/Non-Profit&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Proprietary&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Public&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[excel-direct.41865.463928703706].[none:School Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[excel-direct.41865.463928703706].[Inclusions (School Type,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</rows>
        <cols>([excel-direct.41865.463928703706].[none:State:nk] / [excel-direct.41865.463928703706].[none:School Type:nk])</cols>
      </table>
      <simple-id uuid='{A350884A-C034-4A69-AF25-CFF82BBFB0F4}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Number of Schools by Type (Bar)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{61583588-9727-4A0D-BBF9-F40F3155121E}' />
    </window>
    <window class='worksheet' name='Number of Schools by Type (Pie)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[none:School Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{11C39300-CED2-4B1C-8A24-3DEC898F32CC}' />
    </window>
    <window class='worksheet' name='Average Loan Amount by Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{41B85A4A-EC39-4189-9C69-2A660BAEE4D5}' />
    </window>
    <window class='worksheet' name='Total Aid (Disbursement) by School'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School:nk]</field>
            <field>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{EEDEFB02-29D8-4A6E-9950-B95A529F8F1E}' />
    </window>
    <window class='worksheet' name='Total Aid (Disbursement) by School/Type (Treemap)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[none:School Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
            <field>[excel-direct.41865.463928703706].[none:School:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{D3894DA9-5E74-485C-9E0F-44F38F7DF6F8}' />
    </window>
    <window class='worksheet' name='Total Aid (Disbursement) by School/Type (Bubble)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[none:School Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
            <field>[excel-direct.41865.463928703706].[none:School:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{01A251D3-5B43-485E-8679-494AC3174220}' />
    </window>
    <window class='worksheet' name='Total Aid (Disbursement) by Loan Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[:Measure Names]</field>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E5492ED3-B48E-48F5-B24C-C91F48A367A5}' />
    </window>
    <window class='worksheet' name='Total Aid by School Type by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{941BB3AD-C3C0-49C3-B72B-CBF8156139D9}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Aid by School Type By State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[none:School Type:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
            <field>[excel-direct.41865.463928703706].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{68F59992-51A9-4DFC-8BDB-17EA75A82165}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='127' name='Average Loan Amount by Type' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='127' name='Number of Schools by Type (Bar)' width='192'>
      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
      JDKymXjAW5gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Schools by Type (Pie)' width='192'>
      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
      pvZ/5f6rxYRdzIsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Aid (Disbursement) by Loan Type' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Aid (Disbursement) by School' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Total Aid (Disbursement) by School/Type (Bubble)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Aid (Disbursement) by School/Type (Treemap)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Aid by School Type By State' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Total Aid by School Type by State' width='192'>
      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
      bKwu7+shGZBZnJnCXmhneHiUsqyYMivuTW7fuo7Xtd+YST/XepDbt66x7lxJ8ZOZn5rCVmRn
      eHiCiuqqPaOkxpub2qpzZHIHPxmXN8ztm1dwp+V7fty1jSi3b1xmbSW9ztmJCQoLbQyPTlNZ
      k75CdnZiksKip7bKnQLvgoTbn+D29RZcafkkpscntmLOUlWdGVNiPSBx+7WLuJadWQ+9vCiK
      nGB6bIKiIhvD4/NU12S+PCGBNwi3XzvHSkq+IxaAgN5gxGQysu5cIhDOvolUVurA7fZw+eqV
      fUfVG4wYjQbczmU2s1ZZCpQ6SnCv+7hy9fKO/rvVWuooxr3u58rVljSLwWjEZNSztrJEMOsm
      0u4YDEZMRh2rK0sEo5mrF0nm82xy9cqFF6gTHCVFuD2hLD+D0YTRoMO1vJT14LnBaMRo0OJa
      Xsp6uHxvBEqLC3FvRLh6+Vxau9FowqjX4lxeIhLPjCngKCnE7Yty9fJZXhpBwGAyYdSLLC8u
      EU1k5ysptuP2JbiactU/8neDrjvnGJz18Pb3f0JJYfZiKp/HhT+hIyTpKb28n+6KgHt5huHF
      AO++/2NK7DvEXHeyKRsIKwZKWk7tEGMnFLxuJyGMRAUjJRdObltWF6cYd4Z574c/oahg/++o
      cS1MMrUW5Ts//CmFtszFcOBZWyGqMRMXzRldmb3xrK4Q11qQtBYunz223b4yN87chsz3fvwz
      CjPW0SzPjjPvg+//+GfYrdm17I6Ce3UZWV+Aoi+g5XTDtmVpepSloMgPfvJzbFnrdhTczmUU
      ow0Mtu2bZC/DwuQwrqiB3/3Z71FgyV4ftuZcQmMOIpoLOdeU7BkcsQBkwlGF+uoKXIsz+AOl
      nE15Imbw0QNcm3D7rbuUFTz/GdQkEpG4QF1VGc6FGfyBcs5u9fcA+ju+wB0Wef2tN3BYMx96
      2Z2+h5/jieq48/ablFhS7zzLRBMitZWlLM9N4y+upPl4ZrdrJ2RikkhNhYOluSn8JVWcPvZs
      pWh366f4EibefOcehS/wJuauLz/Br1i498Y97GkPr0jEZB3VZRYWZyYJlFZzcntNj0Rc1lFd
      ZmVhZpJAWQ0n6vfXDer8/CNCGhtv37uHVZ/+lFkcPVWlBcxPT1BUXkvT03U7ikLHZ78lrC3k
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
